//---------------------------------------------------------------------------

#pragma hdrstop

#include "Unit1.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
Estado::Estado(){
   cant=0;
}
void Estado::setnumero(int numero){
	int numeroi=numero;
}
void Estado::setInstruccion(char mirar,char conv,char mov,int apuntador){
	Ins[cant].set(mirar,conv,mov,apuntador);
	cant++;
}
void estado::ejecutar(int &cabezal,char* &simbolo, int &i,char valornulo){
	int i1; bool b;
	while(i==n){
		i1=0; b=false;
		while((i1<cant)&&(i==n)&&(b==false)){
			if(Ins[i1].sepuede(cabezal,simb,valornulo)){
				Ins[i1].operacion(cabezal,simbolo,i);
				b=true;
			}else{
			 i1++;
			}
		}
	}
}
//-------------------------------------------------------------
 Instruccion::Instruccion(){

 }
 void Instruccion::operacion(int &cabezal,char* &simb,int &i){
   simb[cabezal]=conv;
   i=apuntador;
 }
 bool Instruccion::sepuede(int cabezal,char* &simbolo,char valornulo){
 bool b=false;
	if(simb[cabezal]!=NULL){
		if(simb[cabezal]==mirar){
			b=true;
		}
		if(mirar==valornulo){
			b=true;
		}
	}
	 return b;
 }
 void Instruccion::set(char mirar1,char conv1,char mov1,int apuntador1){
  mirar=mirar1;
  conv=conv1;
  mov=mov1;
  apuntador=apuntador1;
 }

